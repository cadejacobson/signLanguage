@model signLanguageApp.ViewModels.SignViewModel

@{
    ViewData["Title"] = "Pick Two Game";
}

<h1>Pick Two</h1>

<div id="card-container">
    <p>Which card is: <span id="correctCardSpan"></span></p>
  <div class="card">
    <img class="card-image" src="" alt="">
  </div>
  <div class="card">
    <img class="card-image" src="" alt="">
  </div>
</div>
<button id="shuffle-button">Shuffle</button>
<button id="start-button">Start Game</button>


<script>
    const dataModels = [
        { id: 1, image: "https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Un1.svg/1200px-Un1.svg.png" },
        { id: 2, image: "https://w7.pngwing.com/pngs/324/720/png-transparent-black-and-white-angle-number-2-text-photography-monochrome.png" },
        { id: 3, image: "https://svgsilh.com/svg/33766.svg" },
        { id: 4, image: "https://blognumbers.files.wordpress.com/2010/09/4.jpg" },
        { id: 5, image: "https://www.pages2color.com/images/pages/letters-and-numbers/number-5-five.png" }
    ];

    const roundCount = 0;
    const cardContainer = document.getElementById("card-container");
    const startButton = document.getElementById("start-button");
    const correctCard = parseInt(Math.random() * dataModels.length);
    const correctCardSpan = document.getElementById("correctCardSpan");
    correctCardSpan.textContent = correctCard;

    startButton.addEventListener("click", startGame);

    function startGame() {
        const randomModels = getRandomModels(dataModels, 2);
        showCards(randomModels);
    }

    function getRandomModels(models, num) {
        const randomIndices = [];
        while (randomIndices.length < num) {
            const index = Math.floor(Math.random() * models.length);
            if (!randomIndices.includes(index)) {
                randomIndices.push(index);
            }
        }
        return randomIndices.map(index => models[index]);
    }

    function showCards(models) {
        cardContainer.querySelectorAll(".card").forEach((card, index) => {
            const model = models[index];
            const image = card.querySelector(".card-image");
            image.setAttribute("src", model.image);
            image.setAttribute("alt", `Card ${index + 1}`);
            card.dataset.id = model.id;
            card.classList.remove("hidden");
            card.addEventListener("click", handleCardClick);
        });
    }

    function handleCardClick(event) {
      const clickedCard = event.currentTarget;
      const otherCard = Array.from(cardContainer.querySelectorAll(".card"))
        .find(card => card !== clickedCard);
      const clickedModelId = parseInt(clickedCard.dataset.id);
      const otherModelId = parseInt(otherCard.dataset.id);
      const message = clickedModelId === correctCard ? "Correct!" : "Wrong!";
      alert(message);

      roundCount = roundCount + 1;
      if(roundCount < 10)
      {
          startGame();
      }
    }


</script>

<style>
    .card {
        display: inline-block;
        width: 200px;
        height: 200px;
        border: 2px solid black;
        margin: 10px;
    }

    .card-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .hidden {
        display: none;
    }

</style>